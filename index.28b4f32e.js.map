{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAS,SAAS,aAAa,CAAC,SAChC,EAAiB,EAAM,gBAAgB,CAAC,MAExC,EAAY,CAAC,EAEnB,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,CAAW,CAC7B,IA6KuC,EASD,EAtLhC,EAAS,EAAE,MAAM,CAAC,WAAW,CAE7B,EAAe,CAAS,CAAC,EAAO,AAEtC,CAAA,CAAS,CAAC,EAAO,CAAG,AAAiB,QAAjB,EAAyB,OAAS,MAEtD,IAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAW,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,EAAA,I,A,W,M,A,U,wI,IAEjB,OAAQ,GACN,IAAK,OACH,EAAS,EAAM,EAAkB,EAAG,CAAS,CAAC,EAAO,GACrD,KAEF,KAAK,WACH,EAAS,EAAM,EAAkB,EAAG,CAAS,CAAC,EAAO,GACrD,KAEF,KAAK,SACH,EAAS,EAAM,EAAkB,EAAG,CAAS,CAAC,EAAO,GACrD,KAEF,KAAK,MACH,EAAS,GAuJ0B,EAvJI,CAAS,CAAC,EAAO,CAwJvD,SAAC,CAAA,CAAI,CAAZ,EACE,IAAM,EAAS,CAAC,EAAG,KAAK,CAzJgB,EAyJH,CAAC,WAAW,CAC3C,EAAS,CAAC,EAAG,KAAK,CA1JgB,EA0JH,CAAC,WAAW,CAEjD,MAAO,AAAc,QAAd,EAAsB,EAAS,EAAS,EAAS,CAC1D,IA5JM,KAEF,KAAK,SACH,EAAS,GA4JyB,EA5JI,CAAS,CAAC,EAAO,CA6JtD,SAAC,CAAA,CAAI,CAAZ,EACE,IAAM,EAAS,EAAY,EAAG,KAAK,CA9JI,EA8JS,CAAC,WAAW,EACtD,EAAS,EAAY,EAAG,KAAK,CA/JI,EA+JS,CAAC,WAAW,EAE5D,MAAO,AAAc,QAAd,EAAsB,EAAS,EAAS,EAAS,CAC1D,GA7JE,CAEA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,MAAM,CAAC,E,EACrC,CACF,GAEA,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAAM,EAAa,EAAE,MAAM,CAAC,OAAO,CAAC,MAEpC,EAAe,OAAO,CACpB,SAAC,CADH,EACW,OAAA,IAAQ,GAAc,EAAI,SAAS,CAAC,MAAM,CAAC,S,GAEtD,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,SAAS,CAAC,MAAM,CAAC,SAC1C,GAEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAK,SAAS,CAAC,GAAG,CAAC,qBACnB,EAAK,MAAM,CAAG,OAEd,EAAK,SAAS,CAAI,woBAqBlB,EAAK,MAAM,CAAC,GAEZ,EAAK,gBAAgB,CAAC,SAAU,SAAC,CAAjC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAW,IAAI,SAAS,GAExB,EAAW,EAAS,GAAG,CAAC,QACxB,EAAW,EAAS,GAAG,CAAC,YACxB,EAAS,EAAS,GAAG,CAAC,UACtB,EAAM,SAAS,EAAS,GAAG,CAAC,QAC5B,EAAS,EAAY,EAAS,GAAG,CAAC,WAExC,GAAI,EAAS,MAAM,CAAG,EAAG,CACvB,EACE,GACA,GACA,QACA,2CACA,SAGF,MACF,CAEA,GAAI,EAAM,IAAM,EAAM,GAAI,CACxB,EACE,GACA,GACA,QACA,iCACA,SAGF,MACF,CAEA,GAAI,CAAC,OAAO,QAAQ,CAAC,IAAW,GAAU,EAAG,CAC3C,EAAiB,GAAI,GAAI,QAAS,wBAAyB,SAE3D,MACF,CAEA,IAAM,EAAS,SAAS,aAAa,CAAC,KAEtC,CAAA,EAAO,SAAS,CAAI,aAEZ,MAAA,CADA,EAAS,mBAET,MAAA,CADA,EAAS,mBAET,MAAA,CADA,EAAO,mBAEN,MAAA,CADD,EAAI,oBAC4B,MAAA,CAA/B,EAAO,cAAc,CAAC,SAAS,aAGxC,EAAM,WAAW,CAAC,GAElB,EACE,GACA,GACA,UACA,mCACA,WAGF,EAAK,KAAK,EACZ,GAEA,IAAM,EAAmB,SAAC,CAAA,CAAQ,CAAA,CAAU,CAAA,CAAO,CAAA,CAAa,CAAhE,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OACtC,EAAoB,SAAS,aAAa,CAAC,MAC3C,EAA0B,SAAS,aAAa,CAAC,IAEvD,CAAA,EAAa,SAAS,CAAG,gBAAqB,MAAA,CAAL,GACzC,EAAkB,SAAS,CAAC,GAAG,CAAC,SAEhC,EAAa,KAAK,CAAC,GAAG,CAAG,EAAS,KAClC,EAAa,KAAK,CAAC,KAAK,CAAG,EAAW,KACtC,EAAkB,WAAW,CAAG,EAChC,EAAwB,WAAW,CAAG,EAEtC,EAAa,MAAM,CAAC,EAAmB,GACvC,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,WAAW,WAAM,OAAA,EAAa,MAAM,EAAI,EAAA,IAC1C,EAEA,SAAS,EAAS,CAAI,CAAE,CAAU,EAChC,EAAK,IAAI,CAAC,EACZ,CAEA,SAAS,EAAkB,CAAW,CAAE,CAAS,EAC/C,OAAO,SAAC,CAAA,CAAI,CAAZ,EACE,IAAM,EAAS,EAAG,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAC/C,EAAS,EAAG,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAErD,MAAO,AAAc,QAAd,EACH,EAAO,aAAa,CAAC,GACrB,EAAO,aAAa,CAAC,EAC3B,CACF,CAoBA,SAAS,EAAY,CAAY,EAC/B,OAAO,WAAW,EAAa,OAAO,CAAC,aAAc,IACvD,C,2D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tbody = document.querySelector(\"tbody\");\nvar body = document.querySelector(\"body\");\nvar header = document.querySelector(\"thead\");\nvar rowsCollection = tbody.querySelectorAll(\"tr\");\nvar sortState = {};\nheader.addEventListener(\"click\", function(e) {\n    if (e.target.tagName === \"TH\") {\n        var sortBy = e.target.textContent;\n        var currentState = sortState[sortBy];\n        sortState[sortBy] = currentState === \"asc\" ? \"desc\" : \"asc\";\n        var rows = _to_consumable_array(rowsCollection);\n        switch(sortBy){\n            case \"Name\":\n                sortRows(rows, compareTextValues(0, sortState[sortBy]));\n                break;\n            case \"Position\":\n                sortRows(rows, compareTextValues(1, sortState[sortBy]));\n                break;\n            case \"Office\":\n                sortRows(rows, compareTextValues(2, sortState[sortBy]));\n                break;\n            case \"Age\":\n                sortRows(rows, compareNumericValues(3, sortState[sortBy]));\n                break;\n            case \"Salary\":\n                sortRows(rows, compareSalaryValues(4, sortState[sortBy]));\n                break;\n            default:\n                break;\n        }\n        tbody.innerHTML = \"\";\n        rows.forEach(function(row) {\n            return tbody.append(row);\n        });\n    }\n});\ntbody.addEventListener(\"click\", function(e) {\n    var clickedRow = e.target.closest(\"tr\");\n    rowsCollection.forEach(function(row) {\n        return row !== clickedRow && row.classList.remove(\"active\");\n    });\n    e.target.closest(\"tr\").classList.toggle(\"active\");\n});\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nform.method = \"post\";\nform.innerHTML = '\\n<label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\" required></label>\\n<label>Position: <input\\n  data-qa=\"position\" name=\"position\" type=\"text\" required></label>\\n<label>Office: <select data-qa=\"office\" name=\"office\">\\n  <option>Tokyo</option>\\n  <option>Singapore</option>\\n  <option>London</option>\\n  <option>New York</option>\\n  <option>Edinburgh</option>\\n  <option>San Francisco</option>\\n  </select>\\n</label>\\n<label>Age: <input\\n  data-qa=\"age\" name=\"age\" type=\"number\" required></label>\\n<label>Salary:\\n  <input data-qa=\"salary\" name=\"salary\" type=\"number\" required>\\n</label>\\n<button type=\"submit\">Save to table</button>\\n';\nbody.append(form);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var formData = new FormData(form);\n    var formName = formData.get(\"name\");\n    var position = formData.get(\"position\");\n    var office = formData.get(\"office\");\n    var age = parseInt(formData.get(\"age\"));\n    var salary = parseSalary(formData.get(\"salary\"));\n    if (formName.length < 4) {\n        pushNotification(10, 10, \"Error\", \"Name must be at least 4 characters long.\", \"error\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        pushNotification(10, 10, \"Error\", \"Age must be between 18 and 90.\", \"error\");\n        return;\n    }\n    if (!Number.isFinite(salary) || salary <= 0) {\n        pushNotification(10, 10, \"Error\", \"Invalid salary value.\", \"error\");\n        return;\n    }\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"\\n    <td>\".concat(formName, \"</td>\\n    <td>\").concat(position, \"</td>\\n    <td>\").concat(office, \"</td>\\n    <td>\").concat(age, \"</td>\\n    <td>$\").concat(salary.toLocaleString(\"en-US\"), \"</td>\\n  \");\n    tbody.appendChild(newRow);\n    pushNotification(10, 10, \"Success\", \"New employee added successfully.\", \"success\");\n    form.reset();\n});\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"div\");\n    var notificationTitle = document.createElement(\"h2\");\n    var notificationDescription = document.createElement(\"p\");\n    notification.className = \"notification \".concat(type);\n    notificationTitle.classList.add(\"title\");\n    notification.style.top = posTop + \"px\";\n    notification.style.right = posRight + \"px\";\n    notificationTitle.textContent = title;\n    notificationDescription.textContent = description;\n    notification.append(notificationTitle, notificationDescription);\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 2000);\n};\nfunction sortRows(rows, comparator) {\n    rows.sort(comparator);\n}\nfunction compareTextValues(columnIndex, sortOrder) {\n    return function(r1, r2) {\n        var value1 = r1.cells[columnIndex].textContent.trim();\n        var value2 = r2.cells[columnIndex].textContent.trim();\n        return sortOrder === \"asc\" ? value1.localeCompare(value2) : value2.localeCompare(value1);\n    };\n}\nfunction compareNumericValues(columnIndex, sortOrder) {\n    return function(r1, r2) {\n        var value1 = +r1.cells[columnIndex].textContent;\n        var value2 = +r2.cells[columnIndex].textContent;\n        return sortOrder === \"asc\" ? value1 - value2 : value2 - value1;\n    };\n}\nfunction compareSalaryValues(columnIndex, sortOrder) {\n    return function(r1, r2) {\n        var value1 = parseSalary(r1.cells[columnIndex].textContent);\n        var value2 = parseSalary(r2.cells[columnIndex].textContent);\n        return sortOrder === \"asc\" ? value1 - value2 : value2 - value1;\n    };\n}\nfunction parseSalary(salaryString) {\n    return parseFloat(salaryString.replace(/[^0-9.-]+/g, \"\"));\n}\n\n//# sourceMappingURL=index.28b4f32e.js.map\n","'use strict';\n\nconst tbody = document.querySelector('tbody');\nconst body = document.querySelector('body');\nconst header = document.querySelector('thead');\nconst rowsCollection = tbody.querySelectorAll('tr');\n\nconst sortState = {};\n\nheader.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TH') {\n    const sortBy = e.target.textContent;\n\n    const currentState = sortState[sortBy];\n\n    sortState[sortBy] = currentState === 'asc' ? 'desc' : 'asc';\n\n    const rows = [...rowsCollection];\n\n    switch (sortBy) {\n      case 'Name':\n        sortRows(rows, compareTextValues(0, sortState[sortBy]));\n        break;\n\n      case 'Position':\n        sortRows(rows, compareTextValues(1, sortState[sortBy]));\n        break;\n\n      case 'Office':\n        sortRows(rows, compareTextValues(2, sortState[sortBy]));\n        break;\n\n      case 'Age':\n        sortRows(rows, compareNumericValues(3, sortState[sortBy]));\n        break;\n\n      case 'Salary':\n        sortRows(rows, compareSalaryValues(4, sortState[sortBy]));\n        break;\n\n      default:\n        break;\n    }\n\n    tbody.innerHTML = '';\n    rows.forEach((row) => tbody.append(row));\n  }\n});\n\ntbody.addEventListener('click', (e) => {\n  const clickedRow = e.target.closest('tr');\n\n  rowsCollection.forEach(\n    (row) => row !== clickedRow && row.classList.remove('active'),\n  );\n  e.target.closest('tr').classList.toggle('active');\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\nform.method = 'post';\n\nform.innerHTML = `\n<label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\" required></label>\n<label>Position: <input\n  data-qa=\"position\" name=\"position\" type=\"text\" required></label>\n<label>Office: <select data-qa=\"office\" name=\"office\">\n  <option>Tokyo</option>\n  <option>Singapore</option>\n  <option>London</option>\n  <option>New York</option>\n  <option>Edinburgh</option>\n  <option>San Francisco</option>\n  </select>\n</label>\n<label>Age: <input\n  data-qa=\"age\" name=\"age\" type=\"number\" required></label>\n<label>Salary:\n  <input data-qa=\"salary\" name=\"salary\" type=\"number\" required>\n</label>\n<button type=\"submit\">Save to table</button>\n`;\n\nbody.append(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n\n  const formName = formData.get('name');\n  const position = formData.get('position');\n  const office = formData.get('office');\n  const age = parseInt(formData.get('age'));\n  const salary = parseSalary(formData.get('salary'));\n\n  if (formName.length < 4) {\n    pushNotification(\n      10,\n      10,\n      'Error',\n      'Name must be at least 4 characters long.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(\n      10,\n      10,\n      'Error',\n      'Age must be between 18 and 90.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (!Number.isFinite(salary) || salary <= 0) {\n    pushNotification(10, 10, 'Error', 'Invalid salary value.', 'error');\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${formName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>\n  `;\n\n  tbody.appendChild(newRow);\n\n  pushNotification(\n    10,\n    10,\n    'Success',\n    'New employee added successfully.',\n    'success',\n  );\n\n  form.reset();\n});\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  notification.className = `notification ${type}`;\n  notificationTitle.classList.add('title');\n\n  notification.style.top = posTop + 'px';\n  notification.style.right = posRight + 'px';\n  notificationTitle.textContent = title;\n  notificationDescription.textContent = description;\n\n  notification.append(notificationTitle, notificationDescription);\n  document.body.appendChild(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nfunction sortRows(rows, comparator) {\n  rows.sort(comparator);\n}\n\nfunction compareTextValues(columnIndex, sortOrder) {\n  return (r1, r2) => {\n    const value1 = r1.cells[columnIndex].textContent.trim();\n    const value2 = r2.cells[columnIndex].textContent.trim();\n\n    return sortOrder === 'asc'\n      ? value1.localeCompare(value2)\n      : value2.localeCompare(value1);\n  };\n}\n\nfunction compareNumericValues(columnIndex, sortOrder) {\n  return (r1, r2) => {\n    const value1 = +r1.cells[columnIndex].textContent;\n    const value2 = +r2.cells[columnIndex].textContent;\n\n    return sortOrder === 'asc' ? value1 - value2 : value2 - value1;\n  };\n}\n\nfunction compareSalaryValues(columnIndex, sortOrder) {\n  return (r1, r2) => {\n    const value1 = parseSalary(r1.cells[columnIndex].textContent);\n    const value2 = parseSalary(r2.cells[columnIndex].textContent);\n\n    return sortOrder === 'asc' ? value1 - value2 : value2 - value1;\n  };\n}\n\nfunction parseSalary(salaryString) {\n  return parseFloat(salaryString.replace(/[^0-9.-]+/g, ''));\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tbody","document","querySelector","body","header","rowsCollection","querySelectorAll","sortState","addEventListener","e","target","tagName","sortOrder","sortBy","textContent","currentState","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortRows","compareTextValues","r1","r2","value1","cells","value2","parseSalary","innerHTML","forEach","row","append","clickedRow","closest","classList","remove","toggle","form","createElement","add","method","preventDefault","formData","FormData","formName","get","position","office","age","parseInt","salary","pushNotification","Number","isFinite","newRow","concat","toLocaleString","appendChild","reset","posTop","posRight","title","description","type","notification","notificationTitle","notificationDescription","className","style","top","right","setTimeout","comparator","sort","columnIndex","trim","localeCompare","salaryString","parseFloat","replace"],"version":3,"file":"index.28b4f32e.js.map"}